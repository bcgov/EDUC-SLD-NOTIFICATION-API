#logging Properties
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL}
logging.level.org.springframework.web=${SPRING_WEB_LOG_LEVEL}
logging.level.ca.bc.gov.educ.api.pen.replication=${APP_LOG_LEVEL}
logging.level.org.springframework.boot.autoconfigure.logging=${SPRING_BOOT_AUTOCONFIG_LOG_LEVEL}
spring.mvc.log-request-details=${SPRING_SHOW_REQUEST_DETAILS}
#DB Properties
spring.datasource.url=${JDBC_URL}
spring.datasource.username=${ORACLE_USERNAME}
spring.datasource.password=${ORACLE_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
spring.jpa.hibernate.ddl-auto=none
#So that unexpected request body parameters cause error
spring.jackson.deserialization.fail-on-unknown-properties=false
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.jmx.enabled=false
logging.file.name=/logs/app.log
logging.logback.rollingpolicy.max-file-size=5MB
logging.logback.rollingpolicy.clean-history-on-start=true
logging.logback.rollingpolicy.max-history=1
logging.pattern.file={"time_stamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%3p" ,"thread":"%t" ,"class":"%logger{36}","msg":"%replace(%msg){'[\n\r\"]',''}", "exception":"%replace(%rEx{10}){'[\n\r\"]',''}","message_event":%X{messageEvent:-""}}%nopex%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} | [%5p] | [%t] | [%logger{36}] | [%replace(%msg){'[\n\r\"]',''} %X{messageEvent}] | %replace(%rEx{10}){'[\n\r\"]',''}%nopex%n
spring.security.oauth2.resourceserver.jwt.issuer-uri=${TOKEN_ISSUER_URL}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${TOKEN_ISSUER_URL}/protocol/openid-connect/certs
nats.url=${NATS_URL}
nats.maxReconnect=${NATS_MAX_RECONNECT}
management.endpoint.health.show-details=always
cron.scheduled.process.events.stan.lockAtLeastFor=${CRON_SCHEDULED_PROCESS_EVENTS_STAN_LOCK_AT_LEAST_FOR}
cron.scheduled.process.events.stan.lockAtMostFor=${CRON_SCHEDULED_PROCESS_EVENTS_STAN_LOCK_AT_MOST_FOR}
cron.scheduled.process.events.stan=${CRON_SCHEDULED_PROCESS_EVENTS_STAN}
spring.flyway.table=FLYWAY_SCHEMA_HISTORY
purge.records.event.after.days=${PURGE_RECORDS_EVENT_AFTER_DAYS}
scheduled.jobs.purge.old.event.records.cron=${SCHEDULED_JOBS_PURGE_OLD_EVENT_RECORDS_CRON}
