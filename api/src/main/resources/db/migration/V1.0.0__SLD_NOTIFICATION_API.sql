CREATE TABLE SLD_NOTIFICATION_EVENT
(
    SLD_NOTIFICATION_EVENT_EVENT_ID RAW(16)                             NOT NULL,
    EVENT_ID                        RAW(16)                             NOT NULL,
    EVENT_PAYLOAD                   BLOB                                NOT NULL,
    EVENT_STATUS                    VARCHAR2(50)                        NOT NULL,
    EVENT_TYPE                      VARCHAR2(100)                       NOT NULL,
    EVENT_OUTCOME                   VARCHAR2(100)                       NOT NULL,
    CREATE_USER                     VARCHAR(32)                         NOT NULL,
    CREATE_DATE                     TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    UPDATE_USER                     VARCHAR(32)                         NOT NULL,
    UPDATE_DATE                     TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT SLD_NOTIFICATION_EVENT_PK PRIMARY KEY (SLD_NOTIFICATION_EVENT_EVENT_ID)
) LOB (EVENT_PAYLOAD) STORE AS EVENT_PAYLOAD
(
    TABLESPACE API_PEN_BLOB_DATA
);

CREATE INDEX SLD_NOTIFICATION_EVENT_EVENT_STATUS_IDX ON SLD_NOTIFICATION_EVENT (EVENT_STATUS) TABLESPACE API_PEN_IDX;
CREATE INDEX SLD_NOTIFICATION_EVENT_EVENT_TYPE_IDX ON SLD_NOTIFICATION_EVENT (EVENT_TYPE) TABLESPACE API_PEN_IDX;
ALTER TABLE SLD_NOTIFICATION_EVENT
    ADD CONSTRAINT SLD_NOTIFICATION_EVENT_EVENT_ID_UK UNIQUE (EVENT_ID);

COMMENT ON TABLE SLD_NOTIFICATION_EVENT IS 'This table is used to store all the received choreographed events from different api via pub/sub model and process them.';

CREATE TABLE SLD_NOTIFICATION_SHEDLOCK
(
    NAME       VARCHAR(64),
    LOCK_UNTIL TIMESTAMP(3) NULL,
    LOCKED_AT  TIMESTAMP(3) NULL,
    LOCKED_BY  VARCHAR(255),
    CONSTRAINT SLD_NOTIFICATION_SHEDLOCK_PK PRIMARY KEY (NAME)
)
(
    TABLESPACE API_PEN_DATA
);
COMMENT ON TABLE SLD_NOTIFICATION_SHEDLOCK IS 'This table is used to achieve distributed lock between pods, for schedulers.';
